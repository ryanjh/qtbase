#
# Base qmake configuration for GCC on Mbed-OS
#
#
#
MAKEFILE_GENERATOR      = UNIX

QMAKE_PLATFORM          = mbed

include(unix.conf)
include(gcc-base-unix.conf)
include(g++-unix.conf)

mbed_bsp = $$(MBED_BSP)
isEmpty(mbed_bsp) {
    error("This qmakespec requires $MBED_BSP to be set")
}

mbed_compiler = $$(MBED_COMPILER)
isEmpty(mbed_compiler) {
    error("This qmakespec requires $MBED_COMPILER to be set")
}

isEmpty(MBED_CPU_FLAGS) {
    error("The qmakespec is expected to set \$\$MBED_CPU_FLAGS")
}

MBED_FLAGS = \
    $$MBED_CPU_FLAGS \
    -DQT_NO_SOCKET_H \
    -DQT_NO_NATIVE_POLL \
    -D__MBED__ \
    -I$$mbed_bsp \
    -I$$mbed_bsp/platform \
    -I$$mbed_bsp/rtos \
    -I$$mbed_bsp/rtos/TARGET_CORTEX \
    -I$$mbed_bsp/rtos/TARGET_CORTEX/rtx5/Include \
    -I$$mbed_bsp/rtos/TARGET_CORTEX/rtx5/RTX/Include \
    -I$$mbed_bsp/rtos/TARGET_CORTEX/rtx5/RTX/Source \
    -I$$mbed_bsp/rtos/TARGET_CORTEX/rtx5/RTX/Config \
    -I$$mbed_bsp/cmsis \
    -I$$mbed_bsp/cmsis/TARGET_CORTEX_M

for(var, MBED_BSP_TARGET): MBED_FLAGS += -I$$mbed_bsp/targets/$$var

QMAKE_CFLAGS_OPTIMIZE_FULL  = $$QMAKE_CFLAGS_OPTIMIZE
QMAKE_CFLAGS_OPTIMIZE_DEBUG = -O0 -g

QMAKE_CFLAGS_DEBUG      = $$QMAKE_CFLAGS_OPTIMIZE_DEBUG
QMAKE_CFLAGS_WARN_ON    = -Wall
QMAKE_CFLAGS_PIC        =
QMAKE_CFLAGS_SHLIB      =
QMAKE_CFLAGS_STATIC_LIB =
QMAKE_CFLAGS_APP        =
QMAKE_CFLAGS           += $$MBED_FLAGS

QMAKE_CXXFLAGS_DEBUG    = $$QMAKE_CFLAGS_DEBUG
QMAKE_CXXFLAGS_WARN_ON  = $$QMAKE_CFLAGS_WARN_ON
QMAKE_CXXFLAGS_SHLIB    =
QMAKE_CXXFLAGS_STATIC_LIB =
QMAKE_CXXFLAGS_APP      =
QMAKE_CXXFLAGS         += $$MBED_FLAGS

QMAKE_CXXFLAGS_CXX11    =
QMAKE_CXXFLAGS_CXX14    =
QMAKE_CXXFLAGS_CXX1Z    =

QMAKE_LFLAGS_GCSECTIONS = -Wl,--gc-sections
QMAKE_LFLAGS           += $$MBED_FLAGS $$QMAKE_LFLAGS_GCSECTIONS

QMAKE_CC                = $${mbed_compiler}-gcc
QMAKE_CXX               = $${mbed_compiler}-g++
QMAKE_AR                = $${mbed_compiler}-ar cqs
QMAKE_OBJCOPY           = $${mbed_compiler}-objcopy
QMAKE_NM                = $${mbed_compiler}-nm -P
QMAKE_RANLIB            = $${mbed_compiler}-ranlib
QMAKE_STRIP             = $${mbed_compiler}-strip

QMAKE_LINK_C            = $$QMAKE_CC
QMAKE_LINK_C_SHLIB      =

QMAKE_LINK              = $$QMAKE_CXX
QMAKE_LINK_SHLIB        =

load(qt_config)
